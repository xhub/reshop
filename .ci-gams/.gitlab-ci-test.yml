.sh-run-test: &sh-run-test |
  function runtest() {
    cmd="$1";
    testsuite="$2"; 
    failurefile="$3"; 

    rm -rf "$testsuite"
    mkdir -p "$testsuite"
    pushd "$testsuite" > /dev/null || return 1

    # Get the testsuite
    "$cmd" "$testsuite"

    gams "$testsuite" lo=2 --solver=reshop

    tail -n 1 "$failurefile" | grep -Eq "Failed tests. 0" && echo "$testsuite: SUCCESS"
    EXIT_CODE=$?
 
    if [ $EXIT_CODE -gt 0 ]; then
       echo "emplib: FAILURE"
       cat failures_emp.gms
    fi

    popd > /dev/null || return 1

    return $EXIT_CODE
  }

test-leg:
  stage: test
  tags: [puma]
  image:
    name: $MACHINES_CONTAINER_REG/leg/builder-devel:latest
    entrypoint: [""]
  needs: [fetch-ci-scripts,build-leg]
  script:
    - !reference [ .get-gams ]
    - !reference [ .gams-folder-leg ]
    - *sh-run-test

    - ctest --test-dir build/test --output-junit doctest_results_linux.xml || ctest --test-dir build/test --rerun-failed --output-on-failure

    - export GAMSDIR="/cache/gams-installs/$(cat gams_folder_leg.txt)"
    - export PATH="$GAMSDIR:$PATH"

    - ls -l "$GAMSDIR"/*yaml*
    - rm -f "$GAMSDIR"/gamsconfig.yaml

    # Run regular build test
    - cp build/output/{*.so,optreshop.def} "$GAMSDIR"/
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

    # Install GAMS driver with asan
    - cp build-asan/output/gmsrhp_ux.out "$GAMSDIR"/
    - cp build-asan/output/gamsconfig_test_asan.yaml "$GAMSDIR"/gamsconfig.yaml

    - export LD_LIBRARY_PATH="$GAMSDIR"
    - ctest --test-dir build-asan/test -E gams --output-junit doctest_results_linux.xml || ctest --test-dir build-asan/test -E gams --rerun-failed --output-on-failure

    # Test that we indeed call the right executable
    - RHP_DRIVER_BANNER=1 gams test/gams/embcode_reshop/nash_emb.gms emp=reshop #| grep -q "ReSHOP GAMS testing driver"

    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms


  artifacts:
    name: unittest-results-linux
    paths: [build/test/doctest_results_linux.xml]
    reports:
      junit: build/test/doctest_results_linux.xml

test-debug-leg:
  stage: test
  tags: [puma]
  image:
    name: $MACHINES_CONTAINER_REG/leg/builder-devel:latest
    entrypoint: [""]
  needs: [fetch-ci-scripts,build-debug-leg]
  script:
    - !reference [ .get-gams ]
    - !reference [ .gams-folder-leg ]
    - *sh-run-test

    - ctest --test-dir build/test --output-junit doctest_results_linux.xml || ctest --test-dir build/test --rerun-failed --output-on-failure

    - export GAMSDIR="/cache/gams-installs/$(cat gams_folder_leg.txt)"
    - export PATH="$GAMSDIR:$PATH"

    - cp build/output/{*.so,optreshop.def} "$GAMSDIR"/
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

  artifacts:
    name: unittest-results-debug-linux
    paths: [build/test/doctest_results_linux.xml]
    reports:
      junit: build/test/doctest_results_linux.xml

test-deg:
  stage: test
  tags: [clarus]
  needs: [fetch-ci-scripts,build-deg]
  script:
    - !reference [.get-gams]
    - !reference [.gams-folder-deg]
    - *sh-run-test

    - ctest --test-dir build/test --output-junit doctest_results_deg.xml || ctest --test-dir build/test --rerun-failed --output-on-failure

    - cp -a "$HOME/cache/gams-installs/$(cat gams_folder_deg.txt)" gamsdir
    - chmod -R +w gamsdir
    - export GAMSDIR="$(pwd)/gamsdir"
    - export PATH="$GAMSDIR:$PATH"

    # Run tests with regular reshop
    - cp build/output/{*.dylib,optreshop.def} "$GAMSDIR"/
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

    # Install GAMS driver with asan
    - cp build-asan/output/gmsrhp_ux.out "$GAMSDIR"/
    - cp build-asan/output/gamsconfig_test_asan.yaml "$GAMSDIR"/gamsconfig.yaml

    - export DYLD_LIBRARY_PATH="$GAMSDIR"
    - ctest --test-dir build-asan/test -E gams || ctest --test-dir build-asan/test -E gams --rerun-failed --output-on-failure

    # Test that we indeed call the right executable
    - RHP_DRIVER_BANNER=1 gams test/gams/embcode_reshop/nash_emb.gms emp=reshop #| grep -q "ReSHOP GAMS testing driver"

    # Run tests with regular reshop
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

    # We need to clean up after yourselves
    - rm -rf gamsdir

  artifacts:
    name: unittest-results-deg
    paths: [build/test/doctest_results_deg.xml]
    reports:
      junit: build/test/doctest_results_deg.xml

test-dac:
  stage: test
  tags: [macos-arm64]
  needs: [fetch-ci-scripts,build-dac]
  script:
    - !reference [.get-gams]
    - !reference [.gams-folder-dac]
    - *sh-run-test

    - ctest --test-dir build/test --output-junit doctest_results_dac.xml || ctest --test-dir build/test --rerun-failed --output-on-failure

    - cp -a "$HOME/cache/gams-installs/$(cat gams_folder_dac.txt)" gamsdir
    - chmod -R +w gamsdir
    - export GAMSDIR="$(pwd)/gamsdir"
    - export PATH="$GAMSDIR:$PATH"

    # Run tests with regular reshop
    - cp build/output/{*.dylib,optreshop.def} "$GAMSDIR"/
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

    # Install GAMS driver with asan
    - cp build-asan/output/gmsrhp_ux.out "$GAMSDIR"/
    - cp build-asan/output/gamsconfig_test_asan.yaml "$GAMSDIR"/gamsconfig.yaml

    - export DYLD_LIBRARY_PATH="$GAMSDIR"
    - ctest --test-dir build-asan/test -E gams || ctest --test-dir build-asan/test -E gams --rerun-failed --output-on-failure

    # Test that we indeed call the right executable
    - RHP_DRIVER_BANNER=1 gams test/gams/embcode_reshop/nash_emb.gms emp=reshop #| grep -q "ReSHOP GAMS testing driver"

    # Run tests with regular reshop
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

    # We need to clean up after yourselves
    - rm -rf gamsdir

  artifacts:
    name: unittest-results-dac
    paths: [build/test/doctest_results_dac.xml]
    reports:
      junit: build/test/doctest_results_dac.xml

.pw-run-test: &pw-run-test |
  function Run-Test {
       param (
           [string]$Command,
           [string]$TestSuite,
           [string]$FailureFile
       )
       # Create and switch to the test directory
       New-Item -ItemType Directory -Path $TestSuite -Force | Out-Null
       Set-Location $TestSuite
 
       # Run the command
       & $Command $TestSuite
 
       # Run the GAMS job
       gams.exe $TestSuite lo=2 --solver=reshop
  
       # Check the last line of the failure file for "Failed tests. 0"
       $LastLine = Get-Content -Path $FailureFile | Select-Object -Last 1
       if ($LastLine -notmatch "Failed tests: 0") {
           throw "Test failed in $Directory"
       }
 
       # Return to the original directory
       Set-Location ..
   }


test-wei:
  stage: test
  tags: [pond]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
  needs: [fetch-ci-scripts,build-wei]
  script:
    - !reference [ .get-gams-wei ]
    - !reference [ .gams-folder-wei ]
    - *pw-run-test
    - ctest --test-dir build/test --output-junit doctest_results_windows.xml -E tree

    - $gmsdirname = Get-Content mygmsdir.tmp -Raw
    - $GAMS_PATH = "C:\Cache\gams-installs\$gmsdirname"
    - $env:Path = "$GAMS_PATH;" + $env:Path
    - Copy-Item -Path "build/output/*.dll" -Destination "$GAMS_PATH"
    - Copy-Item -Path "gams_link/optreshop.def" -Destination "$GAMS_PATH"

    - $env:EMPSLV = "reshop"
    # - bash test/gams/test.sh

      # Run tests with regular reshop
    - Run-Test -Command "emplib.exe" -TestSuite "goempgo" -FailureFile "failures_emp.gms"
    - Run-Test -Command "testlib.exe" -TestSuite "quality" -FailureFile "failures_qa.gms"

    - Copy-Item -Path "build-asan/output/gmsrhp_ux.out.exe" -Destination "$GAMS_PATH"
    - Copy-Item -Path "build-asan/output/gamsconfig_test_asan.yaml" -Destination "$GAMS_PATH"/gamsconfig.yaml
    - Run-Test -Command "emplib.exe" -TestSuite "goempgo" -FailureFile "failures_emp.gms"
    - Run-Test -Command "testlib.exe" -TestSuite "quality" -FailureFile "failures_qa.gms"

  artifacts:
    name: unittest-results-windows
    paths: [build/test/doctest_results_windows.xml]
    reports:
      junit: build/test/doctest_results_windows.xml
