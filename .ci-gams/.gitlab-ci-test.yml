.sh-run-test: &sh-run-test |
  function runtest() {
    cmd="$1";
    testsuite="$2"; 
    failurefile="$3"; 

    rm -rf "$testsuite"
    mkdir -p "$testsuite"
    pushd "$testsuite" > /dev/null || return 1

    # Get the testsuite
    "$cmd" "$testsuite"

    gams "$testsuite" lo=2 --solver=reshop

    tail -n 1 "$failurefile" | grep -Eq "Failed tests. 0" && echo "$testsuite: SUCCESS"
    EXIT_CODE=$?
 
    if [ $EXIT_CODE -gt 0 ]; then
       echo "emplib: FAILURE"
       cat failures_emp.gms
    fi

    popd > /dev/null || return 1

    return $EXIT_CODE
  }

test-leg:
  stage: test
  tags: [puma]
  image:
    name: $MACHINES_CONTAINER_REG/leg/builder-devel:latest
    entrypoint: [""]
  needs: [fetch-ci-scripts,build-leg]
  script:
    - !reference [ .get-gams ]
    - !reference [ .gams-folder-leg ]
    - *sh-run-test

    - cp -ra "/cache/gams-installs/$(cat gams_folder_leg.txt)" gamsdir
    - export GAMSDIR="$(pwd)/gamsdir"
    #    - export GAMSDIR="/cache/gams-installs/$(cat gams_folder_leg.txt)"
    - export PATH="$GAMSDIR:$PATH"

    - rm -f "$GAMSDIR"/gamsconfig.yaml

    # Run regular build test
    - cp build/output/{*.so,optreshop.def} "$GAMSDIR"/
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

    # Install GAMS driver with asan in the GAMS directory
    - cp build-asan/output/gmsrhp_ux.out "$GAMSDIR"/
    - cp build-asan/output/gamsconfig_test_asan.yaml "$GAMSDIR"/gamsconfig.yaml
    - cat build-asan/output/gamsconfig_test_asan.yaml
    - cat "$GAMSDIR"/gamsconfig.yaml

    # Needed for ASAN
    # Remember that GAMS is leaky
    - export LD_LIBRARY_PATH="$GAMSDIR"
    - export ASAN_OPTIONS=strict_string_checks=1:detect_invalid_pointer_pairs=100:detect_stack_use_after_return=1:abort_on_error=1:detect_leaks=0

    # Test that we indeed call the right executable
    - RHP_DRIVER_BANNER=1 gams test/gams/embcode_reshop/nash_emb.gms emp=reshop

    - EMPSLV=reshop RHP_SOLVELINK=5 bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

  after_script:
    - rm -rf ./gamsdir

  artifacts:
    name: unittest-results-linux
    paths: [build/test/doctest_results_linux.xml]
    reports:
      junit: build/test/doctest_results_linux.xml

test-debug-leg:
  stage: test
  tags: [puma]
  image:
    name: $MACHINES_CONTAINER_REG/leg/builder-devel:latest
    entrypoint: [""]
  needs: [fetch-ci-scripts,build-debug-leg]
  script:
    - !reference [ .get-gams ]
    - !reference [ .gams-folder-leg ]
    - *sh-run-test

    - cp -ra "/cache/gams-installs/$(cat gams_folder_leg.txt)" gamsdir
    - export GAMSDIR="$(pwd)/gamsdir"
    # - export GAMSDIR="/cache/gams-installs/$(cat gams_folder_leg.txt)"
    - export PATH="$GAMSDIR:$PATH"

    - rm -f "$GAMSDIR"/gamsconfig.yaml

    - cp build/output/{*.so,optreshop.def} "$GAMSDIR"/
    - EMPSLV=reshop bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

  after_script:
    - rm -rf ./gamsdir

  artifacts:
    name: unittest-results-debug-linux
    paths: [build/test/doctest_results_linux.xml]
    reports:
      junit: build/test/doctest_results_linux.xml

##test-deg:
##  stage: test
##  tags: [corina]
##  needs: [fetch-ci-scripts,build-deg]
##  script:
##    - !reference [.get-gams]
##    - !reference [.gams-folder-deg]
##    - *sh-run-test
##
##    - cp -a "$HOME/cache/gams-installs/$(cat gams_folder_deg.txt)" gamsdir
##    - chmod -R +w gamsdir
##    - export GAMSDIR="$(pwd)/gamsdir"
##    - export PATH="$GAMSDIR:$PATH"
##
##    # Run tests with regular reshop
##    - cp build/output/{*.dylib,optreshop.def} "$GAMSDIR"/
##    - EMPSLV=reshop bash test/gams/test.sh
##    - runtest emplib  goempgo failures_emp.gms
##    - runtest testlib quality failures_qa.gms
##
##    # Install GAMS driver with asan
##    - cp build-asan/output/gmsrhp_ux.out "$GAMSDIR"/
##    - cp build-asan/output/gamsconfig_test_asan.yaml "$GAMSDIR"/gamsconfig.yaml
##    - cat build-asan/output/gamsconfig_test_asan.yaml
##    - cat "$GAMSDIR"/gamsconfig.yaml
##
##    - export ASAN_OPTIONS=strict_string_checks=1:detect_invalid_pointer_pairs=100:detect_stack_use_after_return=1:abort_on_error=1:detect_leaks=0
##
##    # Test that we indeed call the right executable
##    - RHP_DRIVER_BANNER=1 gams test/gams/embcode_reshop/nash_emb.gms emp=reshop
##
##    # Run tests with regular reshop name
##    - EMPSLV=reshop RHP_SOLVELINK=5 bash test/gams/test.sh
##    - runtest emplib  goempgo failures_emp.gms
##    - runtest testlib quality failures_qa.gms
##
##  after_script:
##    # We need to clean up after yourselves
##    - rm -rf gamsdir
##
##  artifacts:
##    name: unittest-results-deg
##    paths: [build/test/doctest_results_deg.xml]
##    reports:
##      junit: build/test/doctest_results_deg.xml

test-dac:
  stage: test
  tags: [stan]
  needs: [fetch-ci-scripts,build-dac]
  script:
    - !reference [.get-gams]
    - !reference [.gams-folder-dac]
    - *sh-run-test

    - cp -a "$HOME/cache/gams-installs/$(cat gams_folder_dac.txt)" gamsdir
    - chmod -R +w gamsdir
    - export GAMSDIR="$(pwd)/gamsdir"
    - export PATH="$GAMSDIR:$PATH"

    # Run tests with regular reshop
    - cp build/output/{*.dylib,optreshop.def} "$GAMSDIR"/
    - EMPSLV=reshop RHP_SOLVELINK=5 bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

    # Install GAMS driver with asan
    - cp build-asan/output/gmsrhp_ux.out "$GAMSDIR"/
    - cp build-asan/output/gamsconfig_test_asan.yaml "$GAMSDIR"/gamsconfig.yaml
    - cat build-asan/output/gamsconfig_test_asan.yaml
    - cat "$GAMSDIR"/gamsconfig.yaml

    - export ASAN_OPTIONS=strict_string_checks=1:detect_invalid_pointer_pairs=100:detect_stack_use_after_return=1:abort_on_error=1:detect_leaks=0
    - export DYLD_FALLBACK_LIBRARY_PATH="$GAMSDIR"

    # Test that we indeed call the right executable
    - RHP_DRIVER_BANNER=1 gams test/gams/embcode_reshop/nash_emb.gms emp=reshop

    # Run tests with ASAN reshop
    - EMPSLV=reshop RHP_SOLVELINK=5 bash test/gams/test.sh
    - runtest emplib  goempgo failures_emp.gms
    - runtest testlib quality failures_qa.gms

  after_script:
    # We need to clean up after yourselves
    - rm -rf gamsdir

  artifacts:
    name: unittest-results-dac
    paths: [build/test/doctest_results_dac.xml]
    reports:
      junit: build/test/doctest_results_dac.xml


      #test-wei:
      #  stage: test
      #  tags: [pond]
      #  image:
      #    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
      #  needs: [fetch-ci-scripts,build-wei]
      #  script:
      #    - !reference [ .get-gams-wei ]
      #    - !reference [ .gams-folder-wei ]
      #  artifacts:
      #    name: reshop-wei-test
      #    paths:
      #      - build/test/doctest_results_windows.xml
      #      - goempgo/
      #      - quality/
      #    reports:
      #      junit: build/test/doctest_results_windows.xml
